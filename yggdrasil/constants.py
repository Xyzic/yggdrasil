"""Constants used by yggdrasil."""


# ======================================================
# Do not edit this file past this point as the following
# is generated by yggdrasil.schema.update_constants
# ======================================================

LANG2EXT = {
    'yaml': '.yml',
    'R': '.R',
    'r': '.R',
    'c': '.c',
    'c++': '.cpp',
    'cpp': '.cpp',
    'cxx': '.cpp',
    'executable': '.exe',
    'fortran': '.f90',
    'lpy': '.lpy',
    'matlab': '.m',
    'osr': '.xml',
    'python': '.py',
    'sbml': '.xml',
}
EXT2LANG = {v: k for k, v in LANG2EXT.items()}
LANGUAGES = {
    'compiled': [
        'c', 'c++', 'fortran'],
    'interpreted': [
        'R', 'matlab', 'python'],
    'build': [
        'cmake', 'make'],
    'dsl': [
        'lpy', 'osr', 'sbml'],
    'other': [
        'executable', 'function', 'timesync'],
}
LANGUAGES['all'] = (
    LANGUAGES['compiled']
    + LANGUAGES['interpreted']
    + LANGUAGES['build']
    + LANGUAGES['dsl']
    + LANGUAGES['other'])
LANGUAGES_WITH_ALIASES = {
    'compiled': [
        'c', 'c++', 'cpp', 'cxx', 'fortran'],
    'interpreted': [
        'R', 'r', 'matlab', 'python'],
    'build': [
        'cmake', 'make'],
    'dsl': [
        'lpy', 'osr', 'sbml'],
    'other': [
        'executable', 'function', 'timesync'],
}
LANGUAGES_WITH_ALIASES['all'] = (
    LANGUAGES_WITH_ALIASES['compiled']
    + LANGUAGES_WITH_ALIASES['interpreted']
    + LANGUAGES_WITH_ALIASES['build']
    + LANGUAGES_WITH_ALIASES['dsl']
    + LANGUAGES_WITH_ALIASES['other'])
COMPILER_ENV_VARS = {
    'c': {
        'exec': 'CC',
        'flags': 'CFLAGS',
    },
    'c++': {
        'exec': 'CXX',
        'flags': 'CXXFLAGS',
    },
    'fortran': {
        'exec': 'FC',
        'flags': 'FFLAGS',
    },
}
COMPILATION_TOOL_VARS = {
    'gcc': {
        'exec': 'CC',
        'flags': 'CFLAGS',
    },
    'clang': {
        'exec': 'CC',
        'flags': 'CFLAGS',
    },
    'cl': {
        'exec': 'CC',
        'flags': 'CFLAGS',
    },
    'g++': {
        'exec': 'CXX',
        'flags': 'CXXFLAGS',
    },
    'clang++': {
        'exec': 'CXX',
        'flags': 'CXXFLAGS',
    },
    'cl++': {
        'exec': 'CXX',
        'flags': 'CXXFLAGS',
    },
    'gfortran': {
        'exec': 'FC',
        'flags': 'FFLAGS',
    },
    'LINK': {
        'exec': 'LINK',
        'flags': 'LDFLAGS',
    },
    'ld': {
        'exec': 'LD',
        'flags': 'LDFLAGS',
    },
    'cmake': {
        'exec': None,
        'flags': None,
    },
    'make': {
        'exec': None,
        'flags': None,
    },
    'nmake': {
        'exec': None,
        'flags': None,
    },
    'ar': {
        'exec': 'AR',
        'flags': None,
    },
    'libtool': {
        'exec': 'LIBTOOL',
        'flags': None,
    },
    'LIB': {
        'exec': None,
        'flags': None,
    },
}
