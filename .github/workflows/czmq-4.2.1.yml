name: Test of czmq 4.2.1

on:
  push:
    branches-ignore:
      - 'gh-pages'

jobs:
  test_conda:
    name: Using conda dependencies (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      CONFIGURATION: Debug
    strategy:
      max-parallel: 20
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: zeromq/czmq
    - name: Set up miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        channels: conda-forge
    - name: Install dependencies using conda (WINDOWS)
      if: matrix.os == 'windows-latest'
      run: conda install vs2017 ninja
    - name: Install dependencies using conda (OSX)
      if: matrix.os == 'macos-latest'
      run: conda install clang clangxx
    - name: Install dependencies using conda (OSX/LINUX)
      if: matrix.os != 'windows-latest'
      run: conda install autoconf automake libtool libuuid pkg-config
    - name: Install dependencies using conda (ALL)
      run: |
        conda install cmake pcre zeromq
        conda list
    - name: Set environment variable pointing to the conda library directory (OSX)
      if: matrix.os == 'macos-latest'
      run: echo "LDFLAGS=\"-Wl,-rpath,$CONDA_PREFIX/lib $LDFLAGS\"" >> $GITHUB_ENV
    - name: Build the CZMQ package (OSX/LINUX)
      if: matrix.os != 'windows-latest'
      run: |
        ./autogen.sh
        ./configure
    - name: Build the CZMQ package (WINDOWS)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir build
        cd build
        cmake .. -DCZMQ_BUILD_SHARED=ON -DCZMQ_BUILD_STATIC=OFF -DCMAKE_PREFIX_PATH=$CONDA_PREFIX/lib
        cmake --build . --config ${{ env.CONFIGURATION }}
    - name: Run the tests (OSX/LINUX)
      if: matrix.os != 'windows-latest'
      run: |
        make check-verbose
    - name: Run the tests (WINDOWS)
      if: matrix.os == 'windows-latest'
      run: |
        ctest -C ${{ env.CONFIGURATION }} -V
    # - name: Start SSH session
    #   uses: luchihoratiu/debug-via-ssh@main
    #   if: ${{ failure() }}
    #   with:
    #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    #     SSH_PASS: ${{ secrets.SSH_PASS }}

  test_brew:
    name: Using dependencies from Homebrew (OSX)
    runs-on: macos-latest
    strategy:
      max-parallel: 20
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        repository: zeromq/czmq
    - name: Install dependencies using homebrew (OSX)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install git libtool pkg-config autoconf automake cmake ossp-uuid pcre zmq
    - name: Install dependencies using apt-get (LINUX)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool pkg-config autotools-dev autoconf automake cmake uuid-dev libpcre3-dev libzmq3-dev
    - name: Build the CZMQ package (OSX/LINUX)
      if: matrix.os != 'windows-latest'
      run: |
        ./autogen.sh
        ./configure
    - name: Run the tests (OSX/LINUX)
      if: matrix.os != 'windows-latest'
      run: make check-verbose
    # - name: Start SSH session
    #   uses: luchihoratiu/debug-via-ssh@main
    #   if: ${{ failure() }}
    #   with:
    #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    #     SSH_PASS: ${{ secrets.SSH_PASS }}

  test_git:
    name: Using Github master version of zeromq (OSX)
    runs-on: macos-latest
    strategy:
      max-parallel: 20
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        repository: zeromq/czmq
    - name: Install dependencies using homebrew (OSX)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install git libtool pkg-config autoconf automake cmake ossp-uuid pcre
    - name: Install dependencies using apt-get (LINUX)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool pkg-config autotools-dev autoconf automake cmake uuid-dev libpcre3-dev
    - name: Clone, build, and install zeromq master branch
      if: matrix.os != 'windows-latest'
      run: |
        cd ..
        git clone git://github.com/zeromq/libzmq.git
        cd libzmq
        ./autogen.sh
        ./configure --with-libsodium
        sudo make install
        cd ..
    - name: Build the CZMQ package
      if: matrix.os != 'windows-latest'
      run: |
        ./autogen.sh
        ./configure
    - name: Run the tests
      if: matrix.os != 'windows-latest'
      run: make check-verbose
    # - name: Start SSH session
    #   uses: luchihoratiu/debug-via-ssh@main
    #   if: ${{ failure() }}
    #   with:
    #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    #     SSH_PASS: ${{ secrets.SSH_PASS }}
